rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    match /bills/{billDoc} {
      function isSignedIn() {
        return request.auth != null
      }
      function isEditor() {
      	return request.auth.uid in resource.data.users
      }
      function isCreator() {
      	return request.auth.uid == resource.data.creatorUid
      }

      allow read: if isSignedIn() && isEditor();
      
    	allow create: if isSignedIn() &&
        request.auth.uid in request.resource.data.users &&
      	request.resource.data.creatorUid == request.auth.uid &&
        request.resource.data.name is string &&
        request.resource.data.name.size() >= 1 &&
        request.resource.data.name.size() <= 20 &&
        request.auth.uid in request.resource.data.users &&
        request.resource.data.usersArray.size() > 0;
      
      allow update: if isSignedIn() && isEditor() &&
        !request.resource.data.diff(resource.data).affectedKeys().hasAny(['name', 'creatorUid']);
        // might be better to do the other rules inside a cloud function
      
      allow delete: if isCreator();
    }
  }
}